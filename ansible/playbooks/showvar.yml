# Creates a comma separated file named os.csv in execution folder.
- hosts: all
  become: no
  vars:
    hostn:
    output_file: os.csv
  tasks:
    - block:
        # For permisison setup.
        - name: get current user
          command: whoami
          register: whoami
          run_once: yes

        - name: clean file
          copy:
            dest: "{{ output_file }}"
            content: 'hostname,distribution,version,release'
            owner: "{{ whoami.stdout }}"
          run_once: yes

        - name: fill os information
          lineinfile:
            path: "{{ output_file }}"
            # line: "{{ hostvars[inventory_hostname] }},\
            # {% for host in groups['db'] %}{{ hostvars[host]['ansible_facts']['eth0']['ipv4']['address'] }} {% endfor %},\
            # {{ hostvars[inventory_hostname].ansible_host }},\
            # {{ ansible_hostname }},\
            #   {{ ansible_distribution }},\
            #   {{ ansible_distribution_version }},\
            #   {{ ansible_distribution_release }}"
            line: "{{ hostvars[inventory_hostname].ansible_host }},\
            {{ ansible_hostname }},\
              {{ ansible_distribution }},\
              {{ ansible_distribution_version }},\
              {{ ansible_distribution_release }}"
          # Tries to prevent concurrent writes.
          throttle: 1

        - name: Debug registered var
          set_fact:
          # debug:
            # msg: "{{ hostvars[inventory_hostname].ansible_host }}"
            # var="{{ hostvars[inventory_hostname].ansible_host }}"
            hostn: "{{ hostvars[inventory_hostname].ansible_host if not hostn else hostn + 'qqq' }}"
            # msg: "{{hostn}}"
            # msg: "{{ hostvars[inventory_hostname].ansible_host }}"

        - name: Debug registered var2
          debug:
            msg: host name={{hostn}}

      delegate_to: localhost
